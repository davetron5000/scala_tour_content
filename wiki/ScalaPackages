h1. The Gist

"Scala Packages":http://www.scala-lang.org/node/119 gives an overview of what packages in Scala are.  

h1. My Interpretation

On the surface, they are a slightly more flexible version of Java's imports:

<script src="http://gist.github.com/155980.js"></script>

You can also import packages anywhere you want, and those imports will be applied to the given scope.  This lets you keep code a bit cleaner by reducing the scope of available symbols and classes to only the most minimal.

However, this doesn't really touch on some of the subtleties of how Scala treats packages.

"Read This":http://www.drmaciver.com/2009/07/how-packages-work-in-scala/ for a detailed overview of some very subtle behavior.

h1. My Thoughts on this Feature

I'm not a fan of imports and, while Scala breaks the "packages are just directories on the filesystem" concept, I think a higher level abstract should've been created.  I'd love to say something like

pre. import hibernate[3.2,)

That being said, Scala 2.8 *should* provide something a bit closer (or a way to make packaging more like, you know, packaging stuff together and not just group classes).

Scala also relies much more heavily on so-called "static imports" to make the syntax more compact (specifically with [w:ImplicitMethods]).  I do not like this in Java, since it can make it hard to know the source of code, but can be very powerful for API designers (and isn't much more egregious than some of the Rubyisms that go into creating DSLs).

I *do* think the behavior outlined in the linked blog article is a bit crazy.
