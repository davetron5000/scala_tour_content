This is my own "re-telling" of the "tour of Scala":http://www.scala-lang.org/node/104 from the official Scala website.  If you are wondering [w:WhyAnotherTour], it's mostly because it was fun and informative.  I hope you feel the same way.

You should be able to go through these in the order listed, with each building on previous topics.  I've also linked to the original tour topics as well as added my own where I thought it might help.

h2. Basics

# [w:ScalaBasics] - this covers some syntactic things that might surprise you, as well as some very basic things about working with Scala (not in the tour)
# [w:UnifiedTypes]
# [w:ScalaClasses]
# [w:ScalaProperties] - *not in the official tour*
# [w:ScalaPackages]
# [w:ScalaTraits]
# [w:ScalaGenerics]
# [w:ScalaAnnotations]
# [w:ScalaOperators]

h2. Intermediate

# [w:ScalaFunctions]
# [w:PatternMatching]
# [w:FunctionCurrying] - define a function that has received some of its parameters now, and will get the remainder later.
# [w:CaseClasses] - taking switch statements to a useful level.
# [w:SealedClasses] - tightening up [w:CaseClasses].
# [w:XmlLiterals]
# [w:ForComprehensions] - don't let the name confuse you; this is about Scala's powerful @for@ loop construct
# [w:TypeBounds]
# [w:InnerClasses] - you only thought they were basic.
# [w:ImplicitConversions]
# [w:TypeDependentClosures] - Closures in general discussed here, too.

h2. Advanced

# [w:ImplicitParameters]
# [w:TypeVariance]
# [w:AbstractTypes] - *not* abstract classes
# [w:ExplcitlyTypedSelfReferences]

h2. Not Covered

There's a few things that aren't really covered by the tour (other than [w:ScalaBasics(some basics)], that are, at first glance, key to understanding what Scala can do for you.

# [w:ScalaObject]
# [w:ActorsAndConcurrency]
# [w:JavaIntegration]
# [w:DuckTyping]
