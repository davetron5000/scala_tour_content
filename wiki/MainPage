I find the "tour of scala":http://www.scala-lang.org/node/104 a nice idea, but very difficult to follow.  The topics are touched on very lightly, and have some esoteric examples that make them a bit hard to follow.  I find some of them very difficult to understand as someone new to Scala, inexperienced with functional languages, but experienced in other languages.

This is my attempt to go through each item on the tour and really try to understand it; then document my findings in, what I hope will be, a more clear way.

* Basics
** UnifiedTypes
** ScalaBasics
** ScalaClasses
** ScalaTraits
** ScalaGenerics
* Intermediate
** ScalaFunctions
** PatternMatching
** FunctionCurrying - define a function that has received some of its parameters now, and will get the remainder later.
** CaseClasses - taking switch statements to a useful level.
** XmlLiterals
** ForComprehensions - don't let the name confuse you; this is about Scala's powerful @for@ loop construct
** TypeBounds
** InnerClasses - you only thought they were basic.
* Advanced
** TypeVariance
** AbstractTypes - *not* abstract classes
** ExplcitlyTypedSelfReferences
